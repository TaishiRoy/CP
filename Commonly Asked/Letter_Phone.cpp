
// recursive function to generate all possible strings that can be generated by typing given digit sequence on letter phone
// O(4^n) time complexity


void combUtil(vector<string> &map, string &A, vector<string> &out, string curr, int len)
{
    if(len==A.size())
    {
        out.push_back(curr);
        return;
    }
    for(int i=0; i< map[int(A[len]) - int('0')].length(); i++)
    {
        combUtil(map, A, out, curr+map[int(A[len]) - int('0')][i], len+1);
    }
    return;
}


vector<string> letterCombinations(string A) {
    vector<string> map = { "0", "1", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
    vector<string> out;
    string curr;
    combUtil(map, A, out, curr, 0);
    return out;
}
